{
	"info": {
		"_postman_id": "ecommerce-api-collection",
		"name": "E-commerce API",
		"description": "Collection for testing E-commerce API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has users array\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.an('array');",
									"    pm.expect(jsonData.results).to.be.above(0);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{BASE_URL}}/api/v1/users",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "v1", "users"]
						},
						"description": "Get all users with pagination"
					}
				},
				{
					"name": "Create New User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has user data\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.an('object');",
									"    pm.expect(jsonData.data.name).to.eql(\"Test User\");",
									"    pm.expect(jsonData.data.email).to.eql(\"test@example.com\");",
									"    ",
									"    // Save user ID for other requests",
									"    if (jsonData.data._id) {",
									"        pm.environment.set(\"user_id\", jsonData.data._id);",
									"    }",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"url": {
							"raw": "{{BASE_URL}}/api/v1/users",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "v1", "users"]
						},
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\",\n    \"passwordConfirm\": \"password123\",\n    \"phone\": \"+201234567890\",\n    \"role\": \"user\"\n}"
						},
						"description": "Create a new user"
					}
				},
				{
					"name": "Get User by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has correct user data\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.an('object');",
									"    pm.expect(jsonData.data._id).to.eql(pm.environment.get(\"user_id\"));",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{BASE_URL}}/api/v1/users/:id",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "v1", "users", ":id"],
							"variable": [
								{
									"key": "id",
									"value": "{{user_id}}"
								}
							]
						},
						"description": "Get specific user by ID"
					}
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"User was updated correctly\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.be.an('object');",
									"    pm.expect(jsonData.data.name).to.eql(\"Updated Name\");",
									"    pm.expect(jsonData.data.email).to.eql(\"updated@example.com\");",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"url": {
							"raw": "{{BASE_URL}}/api/v1/users/:id",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "v1", "users", ":id"],
							"variable": [
								{
									"key": "id",
									"value": "{{user_id}}"
								}
							]
						},
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Name\",\n    \"email\": \"updated@example.com\",\n    \"phone\": \"+201234567891\"\n}"
						},
						"description": "Update user information"
					}
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"// Clear the user_id variable after deletion",
									"pm.environment.unset(\"user_id\");"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"url": {
							"raw": "{{BASE_URL}}/api/v1/users/:id",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "v1", "users", ":id"],
							"variable": [
								{
									"key": "id",
									"value": "{{user_id}}"
								}
							]
						},
						"description": "Delete user by ID"
					}
				}
			],
			"description": "User management endpoints"
		}
	],
	"variable": [
		{
			"key": "BASE_URL",
			"value": "http://localhost:8000"
		}
	]
} 